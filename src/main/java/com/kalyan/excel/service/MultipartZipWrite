import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipArchiveInputStream;
import org.apache.commons.io.FileUtils;
import org.springframework.web.multipart.MultipartFile;
import java.io.*;

public class UnzipMultipartFileToDriveExample {

    public void unzipAndSave(MultipartFile multipartFile, String destinationDirectory) throws IOException {
        // Convert MultipartFile to File
        File zipFile = convertMultipartFileToFile(multipartFile);

        // Create destination directory if it doesn't exist
        File destDir = new File(destinationDirectory);
        if (!destDir.exists()) {
            destDir.mkdirs();
        }

        try (ZipArchiveInputStream zis = new ZipArchiveInputStream(new FileInputStream(zipFile))) {
            ZipArchiveEntry entry;
            while ((entry = zis.getNextZipEntry()) != null) {
                // Construct file path for the entry
                File file = new File(destDir, entry.getName());

                // Extract entry to the destination directory
                FileUtils.copyInputStreamToFile(zis, file);
            }
        }
    }

    private File convertMultipartFileToFile(MultipartFile multipartFile) throws IOException {
        File file = new File(System.getProperty("java.io.tmpdir") + File.separator + multipartFile.getOriginalFilename());
        multipartFile.transferTo(file);
        return file;
    }

    public static void main(String[] args) {
        UnzipMultipartFileToDriveExample example = new UnzipMultipartFileToDriveExample();

        // Example usage:
        try {
            // Replace "multipartFile" with your actual MultipartFile object
            MultipartFile multipartFile = /* your MultipartFile */;
            String destinationDirectory = "path/to/save/unzipped/files"; // Specify the desired directory

            example.unzipAndSave(multipartFile, destinationDirectory);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}